name: SonarCloud PR Analysis & AI PR Reviewer

on:
  pull_request:
    branches:
      - main  # Analyze PRs targeting main

permissions:
  contents: read
  pull-requests: write

jobs:
  sonarcloud: 
    name: Run SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-

      - name: Run SonarCloud Analysis
        run: |
          mvn sonar:sonar \
            -D"sonar.organization=savleenkaur04" -D"sonar.projectKey=SavleenKaur04_SonarDemo2" -D"sonar.host.url=https://sonarcloud.io" -D"sonar.pullrequest.key=${{ github.event.pull_request.number }}" -D"sonar.pullrequest.branch=${{ github.head_ref }}" -D"sonar.pullrequest.base=${{ github.base_ref }}"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  fetch-sonar-issues:
    name: Fetch SonarCloud Issues & Post Inline Comments
    needs: sonarcloud
    runs-on: ubuntu-latest

    steps:
      - name: Fetch SonarCloud Issues
        id: fetch_issues
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PROJECT_KEY=SavleenKaur04_SonarDemo2
          SONAR_TOKEN="${{ secrets.SONAR_TOKEN }}"

          API_URL="https://sonarcloud.io/api/issues/search?componentKeys=${PROJECT_KEY}&pullRequest=${PR_NUMBER}"

          RESPONSE=$(curl -s -u ${SONAR_TOKEN}: "${API_URL}")
          echo "SonarCloud API Response: $RESPONSE"  # Debugging

          echo "${RESPONSE}" > sonar_issues.json

      - name: Post Inline Comments on PR
        env:
          GITHUB_TOKEN: ${{ secrets.INLINE_COMMENT }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO=${{ github.repository }}
          COMMIT_ID=$(jq --raw-output .pull_request.head.sha "$GITHUB_EVENT_PATH")
          SONAR_ISSUES_FILE="sonar_issues.json"

          echo "Processing SonarCloud Issues for PR #$PR_NUMBER"

          ISSUES=$(jq -c '.issues[]' ${SONAR_ISSUES_FILE})

          for ISSUE in $ISSUES; do
            FILE=$(echo "$ISSUE" | jq -r '.component' | sed 's/.*://')
            LINE=$(echo "$ISSUE" | jq -r '.line')
            MESSAGE=$(echo "$ISSUE" | jq -r '.message')

            echo "Processing Issue: File=$FILE, Line=$LINE, Message=$MESSAGE"

            if [ "$LINE" == "null" ] || [ -z "$LINE" ]; then
              echo "No line number detected. Posting general PR comment."
              PAYLOAD=$(jq -n --arg body "üîç **SonarCloud Issue:** $MESSAGE\n\n**File:** \`$FILE\`" '{body: $body}')
              COMMENT_URL="https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments"

              curl -s -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
                -H "Content-Type: application/json" \
                -d "$PAYLOAD" \
                "$COMMENT_URL"
              continue
            fi

            echo "Posting inline comment for $FILE at line $LINE"

            PAYLOAD=$(jq -n \
              --arg commit_id "$COMMIT_ID" \
              --arg path "$FILE" \
              --argjson line "$LINE" \
              --arg body "üîç **SonarCloud Issue:** $MESSAGE" \
              '{commit_id: $commit_id, path: $path, line: $line, body: $body}')

            COMMENT_URL="https://api.github.com/repos/$REPO/pulls/$PR_NUMBER/comments"

            curl -s -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Content-Type: application/json" \
              -d "$PAYLOAD" \
              "$COMMENT_URL"
          done
