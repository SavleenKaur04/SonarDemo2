name: SonarCloud PR Analysis & AI PR Reviewer

on:
  pull_request:
    branches:
      - main  # Analyze PRs targeting main

permissions:
  contents: read
  pull-requests: write

jobs:
  sonarcloud: 
    name: Run SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ‚úÖ Ensures full Git history for SonarCloud

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-

      - name: Run SonarCloud Analysis
        run: mvn sonar:sonar -D"sonar.organization=savleenkaur04" -D"sonar.projectKey=SavleenKaur04_SonarDemo2" -D"sonar.host.url=https://sonarcloud.io" -D"sonar.pullrequest.key=${{ github.event.pull_request.number }}" -D"sonar.pullrequest.branch=${{ github.head_ref }}" -D"sonar.pullrequest.base=${{ github.base_ref }}" -D"sonar.qualitygate.wait||true"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  fetch-sonar-issues:
    name: Fetch SonarCloud Issues & Post Inline Comments
    needs: sonarcloud
    runs-on: ubuntu-latest

    steps:
      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Fetch SonarCloud Issues
        id: fetch_issues
        run: |
          PR_KEY=${{ github.event.pull_request.number }}
          PROJECT_KEY=SavleenKaur04_SonarDemo2
          SONAR_TOKEN="${{ secrets.SONAR_TOKEN }}"
          API_URL="https://sonarcloud.io/api/issues/search?componentKeys=${PROJECT_KEY}&pullRequest=${PR_KEY}"

          echo "Fetching SonarCloud issues from: $API_URL"

          # ‚úÖ Save API response correctly
          curl -s -u ${SONAR_TOKEN}: "${API_URL}" -o sonar_issues.json

          # ‚úÖ Ensure JSON file is not empty
          if [ ! -s sonar_issues.json ]; then
            echo "‚ùå No issues found. Exiting."
            exit 0
          fi

          echo "‚úÖ SonarCloud issues saved successfully."

      - name: Post SonarCloud Issues as PR Comments (Using yq)
        env:
          INLINE_COMMENT: ${{ secrets.INLINE_COMMENT }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO=${{ github.repository }}

          if [ ! -s sonar_issues.json ]; then
            echo "‚ùå No issues found. Exiting."
            exit 0
          fi

          echo "üîç Checking SonarCloud issues..."
          cat sonar_issues.json  # ‚úÖ Debug JSON contents

          # ‚úÖ Check if JSON contains issues before processing
          ISSUE_COUNT=$(yq e '.issues | length' sonar_issues.json)
          if [[ "$ISSUE_COUNT" -eq 0 ]]; then
            echo "‚úÖ No SonarCloud issues found."
            exit 0
          fi

          # ‚úÖ Loop through issues correctly
          yq e '.issues[] | @json' sonar_issues.json | while read -r issue; do
            FILE=$(echo "$issue" | yq e '.component' - | sed 's/.*://')
            LINE=$(echo "$issue" | yq e '.line // 0' -)  # Default to 0 if null
            MESSAGE=$(echo "$issue" | yq e '.message' -)

            if [[ -z "$FILE" || "$FILE" == "null" ]]; then
              echo "‚ùå Skipping issue due to missing file"
              continue
            fi

            if [[ "$LINE" -eq 0 || "$LINE" == "null" ]]; then
              echo "‚ùå Skipping inline comment due to missing line number"
              continue
            fi

            echo "üìå Posting inline comment for $FILE at line $LINE..."

            PAYLOAD=$(jq -n \
              --arg body "üîç **SonarCloud Issue:** $MESSAGE" \
              '{body: $body}')

            COMMENT_URL="https://api.github.com/repos/$REPO/pulls/$PR_NUMBER/comments"

            curl -s -o response.json -w "%{http_code}" -X POST -H "Authorization: Bearer $INLINE_COMMENT" \
              -H "Content-Type: application/json" -d "$PAYLOAD" "$COMMENT_URL"

            echo "üîç GitHub API Response:"
            cat response.json
          done
